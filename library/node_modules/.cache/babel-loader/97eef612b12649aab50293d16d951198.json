{"ast":null,"code":"var _jsxFileName = \"/home/duska/Desktop/zadatak4/library/src/context/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React from 'react';\nimport { authReducer, initialAuthState, booksReducer, initialBooksState } from './reducer';\nimport { API_ROOT } from '../utils/constants';\nimport { post, get, del, put } from '../utils/fetch';\nimport { SET_ERROR, USER_LOGIN, USER_LOGOUT, SET_BOOKS, SELECT_BOOK, REMOVE_BOOK, ADD_BOOK, UPDATE_BOOK, TOGGLE_ADDING, SET_CATEGORY, TOGGLE_EDITING, TOGGLE_REGISTERING, SET_SEARCH, SET_PER_PAGE, NEXT_PAGE, PREV_PAGE } from './constants';\nimport * as storage from '../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  state: initialAuthState,\n  dispatch: () => null\n});\nexport const BooksContext = /*#__PURE__*/React.createContext({\n  state: initialBooksState,\n  dispatch: () => null\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = React.useReducer(authReducer, initialAuthState);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: [state, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"8VQcfKNCRaUce8I9yw7D5O0pzCg=\");\n\n_c = AuthProvider;\nexport const BooksProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [state, dispatch] = React.useReducer(booksReducer, initialBooksState);\n  const value = React.useMemo(() => [state, dispatch], [state]);\n  return /*#__PURE__*/_jsxDEV(BooksContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(BooksProvider, \"meg8ttYSY5khbxdJldteF3KBe30=\");\n\n_c2 = BooksProvider;\nexport const useAuth = () => {\n  _s3();\n\n  const [state, dispatch] = React.useContext(AuthContext);\n\n  const login = async (username, password) => {\n    try {\n      const response = await post(`${API_ROOT}/login`, {\n        username,\n        password\n      });\n\n      if (response.status === 'err') {\n        dispatch({\n          type: SET_ERROR,\n          payload: response.body\n        });\n        return false;\n      }\n\n      const user = response.body;\n      storage.saveUser(user);\n      dispatch({\n        type: USER_LOGIN,\n        payload: user\n      });\n      return user;\n    } catch (e) {\n      dispatch({\n        type: SET_ERROR,\n        payload: e.message\n      });\n      return false;\n    }\n  };\n\n  const logout = () => {\n    storage.removeUser();\n    dispatch({\n      type: USER_LOGOUT\n    });\n    return true;\n  };\n\n  const usernameExists = async username => {\n    try {\n      const response = await get(`${API_ROOT}/checkUsername/${username}`);\n\n      if (response.status === 'err') {\n        dispatch({\n          type: SET_ERROR,\n          payload: response.body\n        });\n        return false;\n      }\n\n      return response.body;\n    } catch (e) {\n      dispatch({\n        type: SET_ERROR,\n        payload: e.message\n      });\n      return false;\n    }\n  };\n\n  const register = async (username, password) => {\n    try {\n      const response = await post(`${API_ROOT}/register`, {\n        username,\n        password\n      });\n\n      if (response.status === 'err') {\n        throw new Error(response.body);\n      }\n\n      return true;\n    } catch (e) {\n      dispatch({\n        type: SET_ERROR,\n        payload: e.message\n      });\n      return false;\n    }\n  };\n\n  const getToken = () => {\n    if (!state.user) return false;\n    return `Bearer ${state.user.jwt}`;\n  };\n\n  const setRegistering = is => dispatch({\n    type: TOGGLE_REGISTERING,\n    payload: is\n  });\n\n  const isAdmin = () => {\n    if (state.user && state.user.hasOwnProperty('username')) return state.user.username === 'admin';\n    return false;\n  };\n\n  return { ...state,\n    login,\n    logout,\n    register,\n    usernameExists,\n    getToken,\n    setRegistering,\n    isAdmin\n  };\n};\n\n_s3(useAuth, \"R/iqDjZuP7G94n7Hryyh+IyzlJk=\");\n\nexport const useBooks = () => {\n  _s4();\n\n  const [state, dispatch] = React.useContext(BooksContext);\n  const {\n    getToken,\n    isAdmin\n  } = useAuth();\n  const getLength = React.useCallback(() => {\n    return {\n      from: state.page * state.perPage - state.perPage + 1,\n      to: state.page * state.perPage\n    };\n  }, [state.page, state.perPage]);\n  const fetchBooks = React.useCallback(async () => {\n    try {\n      const {\n        from,\n        to\n      } = getLength();\n      console.log('fetchBooks from: ', from, 'to: ', to);\n      const response = await get(`${API_ROOT}/books/${from}/${to}`, {\n        'Authorization': getToken()\n      });\n\n      if (response.status === 'err') {\n        dispatch({\n          type: SET_ERROR,\n          payload: response.body\n        });\n        return false;\n      }\n\n      dispatch({\n        type: SET_BOOKS,\n        payload: response.body\n      });\n      return response.body.results;\n    } catch (e) {\n      dispatch({\n        type: SET_ERROR,\n        payload: e.message\n      });\n      return false;\n    }\n  }, [dispatch, getToken, getLength]);\n  const searchBooks = React.useCallback(async (q = false) => {\n    try {\n      const {\n        from,\n        to\n      } = getLength();\n      const search = q === false ? state.search : q;\n      console.log('searchBooks from: ', from, 'to: ', to, 'term: ', search);\n      const response = await get(`${API_ROOT}/books/search/${search}/${from}/${to}`, {\n        'Authorization': getToken()\n      });\n\n      if (response.status === 'err') {\n        dispatch({\n          type: SET_ERROR,\n          payload: response.body\n        });\n        return false;\n      }\n\n      dispatch({\n        type: SET_BOOKS,\n        payload: response.body\n      });\n      return response.body.results;\n    } catch (e) {\n      dispatch({\n        type: SET_ERROR,\n        payload: e.message\n      });\n      return false;\n    }\n  }, [dispatch, getToken, getLength, state.search]);\n  const fetchAuthorBooks = React.useCallback(async author => {\n    try {\n      const {\n        from,\n        to\n      } = getLength();\n      console.log('fetchAuthorBooks from: ', from, 'to: ', to, 'author: ', author);\n      const response = await get(`${API_ROOT}/books/searchByAuthor/${author}/${from}/${to}`, {\n        'Authorization': getToken()\n      });\n\n      if (response.status === 'err') {\n        dispatch({\n          type: SET_ERROR,\n          payload: response.body\n        });\n        return false;\n      }\n\n      dispatch({\n        type: SET_BOOKS,\n        payload: response.body\n      });\n      return response.body.results;\n    } catch (e) {\n      dispatch({\n        type: SET_ERROR,\n        payload: e.message\n      });\n      return false;\n    }\n  }, [dispatch, getToken, getLength]);\n\n  const selectBook = id => dispatch({\n    type: SELECT_BOOK,\n    payload: id\n  });\n\n  const removeBook = async id => {\n    try {\n      if (!isAdmin()) {\n        return false;\n      }\n\n      const response = await del(`${API_ROOT}/books/${id}`, {\n        'Authorization': getToken()\n      });\n\n      if (response.status === 'err') {\n        dispatch({\n          type: SET_ERROR,\n          payload: response.body\n        });\n        return false;\n      }\n\n      dispatch({\n        type: REMOVE_BOOK,\n        payload: id\n      });\n      window.alert('Knjiga je uspesno obrisana');\n      return true;\n    } catch (e) {\n      dispatch({\n        type: SET_ERROR,\n        payload: e.message\n      });\n      return false;\n    }\n  };\n\n  const updateBook = async data => {\n    try {\n      if (!isAdmin()) {\n        return false;\n      }\n\n      const response = await put(`${API_ROOT}/books/${data.id}`, data, {\n        'Authorization': getToken()\n      });\n\n      if (response.status === 'err') {\n        dispatch({\n          type: SET_ERROR,\n          payload: response.body\n        });\n        return false;\n      }\n\n      dispatch({\n        type: UPDATE_BOOK,\n        payload: data\n      });\n      window.alert('Knjiga je uspesno sacuvana');\n      return true;\n    } catch (e) {\n      dispatch({\n        type: SET_ERROR,\n        payload: e.message\n      });\n      return false;\n    }\n  };\n\n  const addBook = async data => {\n    try {\n      if (!isAdmin()) {\n        window.alert('Samo admin ima ovu mogucnost');\n        return false;\n      }\n\n      const response = await post(`${API_ROOT}/books/new`, data, {\n        'Authorization': getToken()\n      });\n\n      if (response.status === 'err') {\n        dispatch({\n          type: SET_ERROR,\n          payload: response.body\n        });\n        return false;\n      }\n\n      dispatch({\n        type: ADD_BOOK,\n        payload: response.body\n      });\n      window.alert('Knjiga je uspesno dodata');\n      return response.body;\n    } catch (e) {\n      dispatch({\n        type: SET_ERROR,\n        payload: e.message\n      });\n      return false;\n    }\n  };\n\n  const setAdding = is => dispatch({\n    type: TOGGLE_ADDING,\n    payload: is\n  });\n\n  const setEditing = is => dispatch({\n    type: TOGGLE_EDITING,\n    payload: is\n  });\n\n  const setCategory = cat => dispatch({\n    type: SET_CATEGORY,\n    payload: cat\n  });\n\n  const clearError = () => dispatch({\n    type: SET_ERROR,\n    payload: false\n  });\n\n  const setSearch = term => dispatch({\n    type: SET_SEARCH,\n    payload: term\n  });\n\n  const setPerPage = count => dispatch({\n    type: SET_PER_PAGE,\n    payload: count\n  });\n\n  const nextPage = () => dispatch({\n    type: NEXT_PAGE\n  });\n\n  const prevPage = () => dispatch({\n    type: PREV_PAGE\n  });\n\n  return { ...state,\n    fetchBooks,\n    fetchAuthorBooks,\n    searchBooks,\n    selectBook,\n    removeBook,\n    updateBook,\n    addBook,\n    setAdding,\n    setEditing,\n    setCategory,\n    clearError,\n    setSearch,\n    setPerPage,\n    nextPage,\n    prevPage\n  };\n};\n\n_s4(useBooks, \"hsc8WQ2MVWtjTi71q3ksReoNbfI=\", false, function () {\n  return [useAuth];\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"BooksProvider\");","map":{"version":3,"sources":["/home/duska/Desktop/zadatak4/library/src/context/index.js"],"names":["React","authReducer","initialAuthState","booksReducer","initialBooksState","API_ROOT","post","get","del","put","SET_ERROR","USER_LOGIN","USER_LOGOUT","SET_BOOKS","SELECT_BOOK","REMOVE_BOOK","ADD_BOOK","UPDATE_BOOK","TOGGLE_ADDING","SET_CATEGORY","TOGGLE_EDITING","TOGGLE_REGISTERING","SET_SEARCH","SET_PER_PAGE","NEXT_PAGE","PREV_PAGE","storage","AuthContext","createContext","state","dispatch","BooksContext","AuthProvider","children","useReducer","BooksProvider","value","useMemo","useAuth","useContext","login","username","password","response","status","type","payload","body","user","saveUser","e","message","logout","removeUser","usernameExists","register","Error","getToken","jwt","setRegistering","is","isAdmin","hasOwnProperty","useBooks","getLength","useCallback","from","page","perPage","to","fetchBooks","console","log","results","searchBooks","q","search","fetchAuthorBooks","author","selectBook","id","removeBook","window","alert","updateBook","data","addBook","setAdding","setEditing","setCategory","cat","clearError","setSearch","term","setPerPage","count","nextPage","prevPage"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,YAHF,EAIEC,iBAJF,QAKO,WALP;AAMA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,gBAApC;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,QAPF,EAQEC,WARF,EASEC,aATF,EAUEC,YAVF,EAWEC,cAXF,EAYEC,kBAZF,EAYsBC,UAZtB,EAYkCC,YAZlC,EAYgDC,SAZhD,EAY2DC,SAZ3D,QAaO,aAbP;AAcA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAAG3B,KAAK,CAAC4B,aAAN,CAAoB;AAC7CC,EAAAA,KAAK,EAAE3B,gBADsC;AAE7C4B,EAAAA,QAAQ,EAAE,MAAM;AAF6B,CAApB,CAApB;AAKP,OAAO,MAAMC,YAAY,gBAAG/B,KAAK,CAAC4B,aAAN,CAAoB;AAC9CC,EAAAA,KAAK,EAAEzB,iBADuC;AAE9C0B,EAAAA,QAAQ,EAAE,MAAM;AAF8B,CAApB,CAArB;AAKP,OAAO,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACJ,KAAD,EAAQC,QAAR,IAAoB9B,KAAK,CAACkC,UAAN,CAAiBjC,WAAjB,EAA8BC,gBAA9B,CAA1B;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAAC2B,KAAD,EAAQC,QAAR,CAA7B;AAAA,cACGG;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMD,Y;;KAAAA,Y;AAUb,OAAO,MAAMG,aAAa,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAM,CAACJ,KAAD,EAAQC,QAAR,IAAoB9B,KAAK,CAACkC,UAAN,CAAiB/B,YAAjB,EAA+BC,iBAA/B,CAA1B;AACA,QAAMgC,KAAK,GAAGpC,KAAK,CAACqC,OAAN,CAAc,MAAM,CAACR,KAAD,EAAQC,QAAR,CAApB,EAAuC,CAACD,KAAD,CAAvC,CAAd;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEO,KAA9B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CATM;;IAAME,a;;MAAAA,a;AAWb,OAAO,MAAMG,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACT,KAAD,EAAQC,QAAR,IAAoB9B,KAAK,CAACuC,UAAN,CAAiBZ,WAAjB,CAA1B;;AAEA,QAAMa,KAAK,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC1C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMrC,IAAI,CAAE,GAAED,QAAS,QAAb,EAAsB;AAC/CoC,QAAAA,QAD+C;AAE/CC,QAAAA;AAF+C,OAAtB,CAA3B;;AAKA,UAAIC,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7Bd,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,UAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,SAAD,CAAR;AACA,eAAO,KAAP;AACD;;AAED,YAAMC,IAAI,GAAGL,QAAQ,CAACI,IAAtB;AACArB,MAAAA,OAAO,CAACuB,QAAR,CAAiBD,IAAjB;AACAlB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAElC,UAAR;AAAoBmC,QAAAA,OAAO,EAAEE;AAA7B,OAAD,CAAR;AAEA,aAAOA,IAAP;AAED,KAjBD,CAiBE,OAAOE,CAAP,EAAU;AACVpB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,QAAAA,OAAO,EAAEI,CAAC,CAACC;AAA9B,OAAD,CAAR;AACA,aAAO,KAAP;AACD;AACF,GAtBD;;AAwBA,QAAMC,MAAM,GAAG,MAAM;AACnB1B,IAAAA,OAAO,CAAC2B,UAAR;AACAvB,IAAAA,QAAQ,CAAC;AAAEe,MAAAA,IAAI,EAAEjC;AAAR,KAAD,CAAR;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,QAAM0C,cAAc,GAAG,MAAMb,QAAN,IAAkB;AACvC,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMpC,GAAG,CAAE,GAAEF,QAAS,kBAAiBoC,QAAS,EAAvC,CAA1B;;AAEA,UAAIE,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7Bd,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,UAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,SAAD,CAAR;AACA,eAAO,KAAP;AACD;;AAED,aAAOJ,QAAQ,CAACI,IAAhB;AAED,KAVD,CAUE,OAAOG,CAAP,EAAU;AACVpB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,QAAAA,OAAO,EAAEI,CAAC,CAACC;AAA9B,OAAD,CAAR;AACA,aAAO,KAAP;AACD;AACF,GAfD;;AAiBA,QAAMI,QAAQ,GAAG,OAAOd,QAAP,EAAiBC,QAAjB,KAA8B;AAC7C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMrC,IAAI,CAAE,GAAED,QAAS,WAAb,EAAyB;AAClDoC,QAAAA,QADkD;AAElDC,QAAAA;AAFkD,OAAzB,CAA3B;;AAKA,UAAIC,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7B,cAAM,IAAIY,KAAJ,CAAUb,QAAQ,CAACI,IAAnB,CAAN;AACD;;AAED,aAAO,IAAP;AAED,KAZD,CAYE,OAAOG,CAAP,EAAU;AACVpB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,QAAAA,OAAO,EAAEI,CAAC,CAACC;AAA9B,OAAD,CAAR;AACA,aAAO,KAAP;AACD;AACF,GAjBD;;AAmBA,QAAMM,QAAQ,GAAG,MAAM;AACrB,QAAI,CAAC5B,KAAK,CAACmB,IAAX,EAAiB,OAAO,KAAP;AACjB,WAAQ,UAASnB,KAAK,CAACmB,IAAN,CAAWU,GAAI,EAAhC;AACD,GAHD;;AAKA,QAAMC,cAAc,GAAGC,EAAE,IAAI9B,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAExB,kBAAR;AAA4ByB,IAAAA,OAAO,EAAEc;AAArC,GAAD,CAArC;;AAEA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAIhC,KAAK,CAACmB,IAAN,IAAcnB,KAAK,CAACmB,IAAN,CAAWc,cAAX,CAA0B,UAA1B,CAAlB,EACE,OAAOjC,KAAK,CAACmB,IAAN,CAAWP,QAAX,KAAwB,OAA/B;AACF,WAAO,KAAP;AACD,GAJD;;AAMA,SAAO,EACL,GAAGZ,KADE;AAELW,IAAAA,KAFK;AAGLY,IAAAA,MAHK;AAILG,IAAAA,QAJK;AAKLD,IAAAA,cALK;AAMLG,IAAAA,QANK;AAOLE,IAAAA,cAPK;AAQLE,IAAAA;AARK,GAAP;AAUD,CA5FM;;IAAMvB,O;;AA8Fb,OAAO,MAAMyB,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAAClC,KAAD,EAAQC,QAAR,IAAoB9B,KAAK,CAACuC,UAAN,CAAiBR,YAAjB,CAA1B;AACA,QAAM;AAAE0B,IAAAA,QAAF;AAAYI,IAAAA;AAAZ,MAAwBvB,OAAO,EAArC;AAEA,QAAM0B,SAAS,GAAGhE,KAAK,CAACiE,WAAN,CAAkB,MAAM;AACxC,WAAO;AACLC,MAAAA,IAAI,EAAIrC,KAAK,CAACsC,IAAN,GAAatC,KAAK,CAACuC,OAApB,GAA+BvC,KAAK,CAACuC,OAAtC,GAAiD,CADlD;AAELC,MAAAA,EAAE,EAAExC,KAAK,CAACsC,IAAN,GAAatC,KAAK,CAACuC;AAFlB,KAAP;AAID,GALiB,EAKf,CAACvC,KAAK,CAACsC,IAAP,EAAatC,KAAK,CAACuC,OAAnB,CALe,CAAlB;AAOA,QAAME,UAAU,GAAGtE,KAAK,CAACiE,WAAN,CAAkB,YAAY;AAC/C,QAAI;AACF,YAAM;AAAEC,QAAAA,IAAF;AAAQG,QAAAA;AAAR,UAAeL,SAAS,EAA9B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCN,IAAjC,EAAuC,MAAvC,EAA+CG,EAA/C;AACA,YAAM1B,QAAQ,GAAG,MAAMpC,GAAG,CAAE,GAAEF,QAAS,UAAS6D,IAAK,IAAGG,EAAG,EAAjC,EAAoC;AAC5D,yBAAiBZ,QAAQ;AADmC,OAApC,CAA1B;;AAIA,UAAId,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7Bd,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,UAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,SAAD,CAAR;AACA,eAAO,KAAP;AACD;;AAEDjB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEhC,SAAR;AAAmBiC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,OAAD,CAAR;AACA,aAAOJ,QAAQ,CAACI,IAAT,CAAc0B,OAArB;AAED,KAfD,CAeE,OAAOvB,CAAP,EAAU;AACVpB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,QAAAA,OAAO,EAAEI,CAAC,CAACC;AAA9B,OAAD,CAAR;AACA,aAAO,KAAP;AACD;AACF,GApBkB,EAoBhB,CAACrB,QAAD,EAAW2B,QAAX,EAAqBO,SAArB,CApBgB,CAAnB;AAsBA,QAAMU,WAAW,GAAG1E,KAAK,CAACiE,WAAN,CAAkB,OAAOU,CAAC,GAAG,KAAX,KAAqB;AACzD,QAAI;AACF,YAAM;AAAET,QAAAA,IAAF;AAAQG,QAAAA;AAAR,UAAeL,SAAS,EAA9B;AACA,YAAMY,MAAM,GAAGD,CAAC,KAAK,KAAN,GAAc9C,KAAK,CAAC+C,MAApB,GAA6BD,CAA5C;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCN,IAAlC,EAAwC,MAAxC,EAAgDG,EAAhD,EAAoD,QAApD,EAA8DO,MAA9D;AACA,YAAMjC,QAAQ,GAAG,MAAMpC,GAAG,CAAE,GAAEF,QAAS,iBAAgBuE,MAAO,IAAGV,IAAK,IAAGG,EAAG,EAAlD,EAAqD;AAC7E,yBAAiBZ,QAAQ;AADoD,OAArD,CAA1B;;AAIA,UAAId,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7Bd,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,UAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,SAAD,CAAR;AACA,eAAO,KAAP;AACD;;AAEDjB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEhC,SAAR;AAAmBiC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,OAAD,CAAR;AACA,aAAOJ,QAAQ,CAACI,IAAT,CAAc0B,OAArB;AAED,KAhBD,CAgBE,OAAOvB,CAAP,EAAU;AACVpB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,QAAAA,OAAO,EAAEI,CAAC,CAACC;AAA9B,OAAD,CAAR;AACA,aAAO,KAAP;AACD;AACF,GArBmB,EAqBjB,CAACrB,QAAD,EAAW2B,QAAX,EAAqBO,SAArB,EAAgCnC,KAAK,CAAC+C,MAAtC,CArBiB,CAApB;AAuBA,QAAMC,gBAAgB,GAAG7E,KAAK,CAACiE,WAAN,CAAkB,MAAOa,MAAP,IAAkB;AAC3D,QAAI;AACF,YAAM;AAAEZ,QAAAA,IAAF;AAAQG,QAAAA;AAAR,UAAeL,SAAS,EAA9B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCN,IAAvC,EAA6C,MAA7C,EAAqDG,EAArD,EAAyD,UAAzD,EAAqES,MAArE;AACA,YAAMnC,QAAQ,GAAG,MAAMpC,GAAG,CACvB,GAAEF,QAAS,yBAAwByE,MAAO,IAAGZ,IAAK,IAAGG,EAAG,EADjC,EACoC;AAC1D,yBAAiBZ,QAAQ;AADiC,OADpC,CAA1B;;AAKA,UAAId,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7Bd,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,UAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,SAAD,CAAR;AACA,eAAO,KAAP;AACD;;AAEDjB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEhC,SAAR;AAAmBiC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,OAAD,CAAR;AACA,aAAOJ,QAAQ,CAACI,IAAT,CAAc0B,OAArB;AAED,KAhBD,CAgBE,OAAOvB,CAAP,EAAU;AACVpB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,QAAAA,OAAO,EAAEI,CAAC,CAACC;AAA9B,OAAD,CAAR;AACA,aAAO,KAAP;AACD;AACF,GArBwB,EAqBtB,CAACrB,QAAD,EAAW2B,QAAX,EAAqBO,SAArB,CArBsB,CAAzB;;AAuBA,QAAMe,UAAU,GAAGC,EAAE,IAAIlD,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAE/B,WAAR;AAAqBgC,IAAAA,OAAO,EAAEkC;AAA9B,GAAD,CAAjC;;AAEA,QAAMC,UAAU,GAAG,MAAMD,EAAN,IAAY;AAC7B,QAAI;AACF,UAAI,CAACnB,OAAO,EAAZ,EAAgB;AACd,eAAO,KAAP;AACD;;AAED,YAAMlB,QAAQ,GAAG,MAAMnC,GAAG,CAAE,GAAEH,QAAS,UAAS2E,EAAG,EAAzB,EAA4B;AACpD,yBAAiBvB,QAAQ;AAD2B,OAA5B,CAA1B;;AAIA,UAAId,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7Bd,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,UAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,SAAD,CAAR;AACA,eAAO,KAAP;AACD;;AAEDjB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAE9B,WAAR;AAAqB+B,QAAAA,OAAO,EAAEkC;AAA9B,OAAD,CAAR;AACAE,MAAAA,MAAM,CAACC,KAAP,CAAa,4BAAb;AACA,aAAO,IAAP;AAED,KAlBD,CAkBE,OAAOjC,CAAP,EAAU;AACVpB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,QAAAA,OAAO,EAAEI,CAAC,CAACC;AAA9B,OAAD,CAAR;AACA,aAAO,KAAP;AACD;AACF,GAvBD;;AAyBA,QAAMiC,UAAU,GAAG,MAAMC,IAAN,IAAc;AAC/B,QAAI;AACF,UAAI,CAACxB,OAAO,EAAZ,EAAgB;AACd,eAAO,KAAP;AACD;;AAED,YAAMlB,QAAQ,GAAG,MAAMlC,GAAG,CAAE,GAAEJ,QAAS,UAASgF,IAAI,CAACL,EAAG,EAA9B,EAAiCK,IAAjC,EAAuC;AAC/D,yBAAiB5B,QAAQ;AADsC,OAAvC,CAA1B;;AAIA,UAAId,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7Bd,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,UAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,SAAD,CAAR;AACA,eAAO,KAAP;AACD;;AAEDjB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAE5B,WAAR;AAAqB6B,QAAAA,OAAO,EAAEuC;AAA9B,OAAD,CAAR;AACAH,MAAAA,MAAM,CAACC,KAAP,CAAa,4BAAb;AACA,aAAO,IAAP;AAED,KAlBD,CAkBE,OAAOjC,CAAP,EAAU;AACVpB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,QAAAA,OAAO,EAAEI,CAAC,CAACC;AAA9B,OAAD,CAAR;AACA,aAAO,KAAP;AACD;AACF,GAvBD;;AAyBA,QAAMmC,OAAO,GAAG,MAAMD,IAAN,IAAc;AAC5B,QAAI;AACF,UAAI,CAACxB,OAAO,EAAZ,EAAgB;AACdqB,QAAAA,MAAM,CAACC,KAAP,CAAa,8BAAb;AACA,eAAO,KAAP;AACD;;AAED,YAAMxC,QAAQ,GAAG,MAAMrC,IAAI,CAAE,GAAED,QAAS,YAAb,EAA0BgF,IAA1B,EAAgC;AACzD,yBAAiB5B,QAAQ;AADgC,OAAhC,CAA3B;;AAIA,UAAId,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC7Bd,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,UAAAA,OAAO,EAAEH,QAAQ,CAACI;AAArC,SAAD,CAAR;AACA,eAAO,KAAP;AACD;;AAEDjB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAE7B,QAAR;AAAkB8B,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAApC,OAAD,CAAR;AACAmC,MAAAA,MAAM,CAACC,KAAP,CAAa,0BAAb;AACA,aAAOxC,QAAQ,CAACI,IAAhB;AAED,KAnBD,CAmBE,OAAOG,CAAP,EAAU;AACVpB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,QAAAA,OAAO,EAAEI,CAAC,CAACC;AAA9B,OAAD,CAAR;AACA,aAAO,KAAP;AACD;AACF,GAxBD;;AA0BA,QAAMoC,SAAS,GAAG3B,EAAE,IAAI9B,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAE3B,aAAR;AAAuB4B,IAAAA,OAAO,EAAEc;AAAhC,GAAD,CAAhC;;AAEA,QAAM4B,UAAU,GAAG5B,EAAE,IAAI9B,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAEzB,cAAR;AAAwB0B,IAAAA,OAAO,EAAEc;AAAjC,GAAD,CAAjC;;AAEA,QAAM6B,WAAW,GAAGC,GAAG,IAAI5D,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAE1B,YAAR;AAAsB2B,IAAAA,OAAO,EAAE4C;AAA/B,GAAD,CAAnC;;AAEA,QAAMC,UAAU,GAAG,MAAM7D,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAEnC,SAAR;AAAmBoC,IAAAA,OAAO,EAAE;AAA5B,GAAD,CAAjC;;AAEA,QAAM8C,SAAS,GAAGC,IAAI,IAAI/D,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAEvB,UAAR;AAAoBwB,IAAAA,OAAO,EAAE+C;AAA7B,GAAD,CAAlC;;AAEA,QAAMC,UAAU,GAAGC,KAAK,IAAIjE,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAEtB,YAAR;AAAsBuB,IAAAA,OAAO,EAAEiD;AAA/B,GAAD,CAApC;;AAEA,QAAMC,QAAQ,GAAG,MAAMlE,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAErB;AAAR,GAAD,CAA/B;;AAEA,QAAMyE,QAAQ,GAAG,MAAMnE,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAEpB;AAAR,GAAD,CAA/B;;AAEA,SAAO,EACL,GAAGI,KADE;AAELyC,IAAAA,UAFK;AAGLO,IAAAA,gBAHK;AAILH,IAAAA,WAJK;AAKLK,IAAAA,UALK;AAMLE,IAAAA,UANK;AAOLG,IAAAA,UAPK;AAQLE,IAAAA,OARK;AASLC,IAAAA,SATK;AAULC,IAAAA,UAVK;AAWLC,IAAAA,WAXK;AAYLE,IAAAA,UAZK;AAaLC,IAAAA,SAbK;AAcLE,IAAAA,UAdK;AAeLE,IAAAA,QAfK;AAgBLC,IAAAA;AAhBK,GAAP;AAkBD,CA/LM;;IAAMlC,Q;UAEmBzB,O","sourcesContent":["import React from 'react'\nimport {\n  authReducer,\n  initialAuthState,\n  booksReducer,\n  initialBooksState,\n} from './reducer'\nimport { API_ROOT } from '../utils/constants'\nimport { post, get, del, put } from '../utils/fetch'\nimport {\n  SET_ERROR,\n  USER_LOGIN,\n  USER_LOGOUT,\n  SET_BOOKS,\n  SELECT_BOOK,\n  REMOVE_BOOK,\n  ADD_BOOK,\n  UPDATE_BOOK,\n  TOGGLE_ADDING,\n  SET_CATEGORY,\n  TOGGLE_EDITING,\n  TOGGLE_REGISTERING, SET_SEARCH, SET_PER_PAGE, NEXT_PAGE, PREV_PAGE,\n} from './constants'\nimport * as storage from '../utils/storage'\n\nexport const AuthContext = React.createContext({\n  state: initialAuthState,\n  dispatch: () => null,\n})\n\nexport const BooksContext = React.createContext({\n  state: initialBooksState,\n  dispatch: () => null,\n})\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(authReducer, initialAuthState)\n\n  return (\n    <AuthContext.Provider value={[state, dispatch]}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const BooksProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(booksReducer, initialBooksState)\n  const value = React.useMemo(() => [state, dispatch], [state])\n\n  return (\n    <BooksContext.Provider value={value}>\n      {children}\n    </BooksContext.Provider>\n  )\n}\n\nexport const useAuth = () => {\n  const [state, dispatch] = React.useContext(AuthContext)\n\n  const login = async (username, password) => {\n    try {\n      const response = await post(`${API_ROOT}/login`, {\n        username,\n        password,\n      })\n\n      if (response.status === 'err') {\n        dispatch({ type: SET_ERROR, payload: response.body })\n        return false\n      }\n\n      const user = response.body\n      storage.saveUser(user)\n      dispatch({ type: USER_LOGIN, payload: user })\n\n      return user\n\n    } catch (e) {\n      dispatch({ type: SET_ERROR, payload: e.message })\n      return false\n    }\n  }\n\n  const logout = () => {\n    storage.removeUser()\n    dispatch({ type: USER_LOGOUT })\n    return true\n  }\n\n  const usernameExists = async username => {\n    try {\n      const response = await get(`${API_ROOT}/checkUsername/${username}`)\n\n      if (response.status === 'err') {\n        dispatch({ type: SET_ERROR, payload: response.body })\n        return false\n      }\n\n      return response.body\n\n    } catch (e) {\n      dispatch({ type: SET_ERROR, payload: e.message })\n      return false\n    }\n  }\n\n  const register = async (username, password) => {\n    try {\n      const response = await post(`${API_ROOT}/register`, {\n        username,\n        password,\n      })\n\n      if (response.status === 'err') {\n        throw new Error(response.body)\n      }\n\n      return true\n\n    } catch (e) {\n      dispatch({ type: SET_ERROR, payload: e.message })\n      return false\n    }\n  }\n\n  const getToken = () => {\n    if (!state.user) return false\n    return `Bearer ${state.user.jwt}`\n  }\n\n  const setRegistering = is => dispatch({ type: TOGGLE_REGISTERING, payload: is })\n\n  const isAdmin = () => {\n    if (state.user && state.user.hasOwnProperty('username'))\n      return state.user.username === 'admin'\n    return false\n  }\n\n  return {\n    ...state,\n    login,\n    logout,\n    register,\n    usernameExists,\n    getToken,\n    setRegistering,\n    isAdmin\n  }\n}\n\nexport const useBooks = () => {\n  const [state, dispatch] = React.useContext(BooksContext)\n  const { getToken, isAdmin } = useAuth()\n\n  const getLength = React.useCallback(() => {\n    return {\n      from: ((state.page * state.perPage) - state.perPage) + 1,\n      to: state.page * state.perPage\n    }\n  }, [state.page, state.perPage])\n\n  const fetchBooks = React.useCallback(async () => {\n    try {\n      const { from, to } = getLength()\n      console.log('fetchBooks from: ', from, 'to: ', to)\n      const response = await get(`${API_ROOT}/books/${from}/${to}`, {\n        'Authorization': getToken(),\n      })\n\n      if (response.status === 'err') {\n        dispatch({ type: SET_ERROR, payload: response.body })\n        return false\n      }\n\n      dispatch({ type: SET_BOOKS, payload: response.body })\n      return response.body.results\n\n    } catch (e) {\n      dispatch({ type: SET_ERROR, payload: e.message })\n      return false\n    }\n  }, [dispatch, getToken, getLength]);\n\n  const searchBooks = React.useCallback(async (q = false) => {\n    try {\n      const { from, to } = getLength()\n      const search = q === false ? state.search : q\n      console.log('searchBooks from: ', from, 'to: ', to, 'term: ', search)\n      const response = await get(`${API_ROOT}/books/search/${search}/${from}/${to}`, {\n        'Authorization': getToken(),\n      })\n\n      if (response.status === 'err') {\n        dispatch({ type: SET_ERROR, payload: response.body })\n        return false\n      }\n\n      dispatch({ type: SET_BOOKS, payload: response.body })\n      return response.body.results\n\n    } catch (e) {\n      dispatch({ type: SET_ERROR, payload: e.message })\n      return false\n    }\n  }, [dispatch, getToken, getLength, state.search])\n\n  const fetchAuthorBooks = React.useCallback(async (author) => {\n    try {\n      const { from, to } = getLength()\n      console.log('fetchAuthorBooks from: ', from, 'to: ', to, 'author: ', author)\n      const response = await get(\n        `${API_ROOT}/books/searchByAuthor/${author}/${from}/${to}`, {\n          'Authorization': getToken(),\n        })\n\n      if (response.status === 'err') {\n        dispatch({ type: SET_ERROR, payload: response.body })\n        return false\n      }\n\n      dispatch({ type: SET_BOOKS, payload: response.body })\n      return response.body.results\n\n    } catch (e) {\n      dispatch({ type: SET_ERROR, payload: e.message })\n      return false\n    }\n  }, [dispatch, getToken, getLength])\n\n  const selectBook = id => dispatch({ type: SELECT_BOOK, payload: id })\n\n  const removeBook = async id => {\n    try {\n      if (!isAdmin()) {\n        return false\n      }\n\n      const response = await del(`${API_ROOT}/books/${id}`, {\n        'Authorization': getToken(),\n      })\n\n      if (response.status === 'err') {\n        dispatch({ type: SET_ERROR, payload: response.body })\n        return false\n      }\n\n      dispatch({ type: REMOVE_BOOK, payload: id })\n      window.alert('Knjiga je uspesno obrisana')\n      return true\n\n    } catch (e) {\n      dispatch({ type: SET_ERROR, payload: e.message })\n      return false\n    }\n  }\n\n  const updateBook = async data => {\n    try {\n      if (!isAdmin()) {\n        return false\n      }\n\n      const response = await put(`${API_ROOT}/books/${data.id}`, data, {\n        'Authorization': getToken(),\n      })\n\n      if (response.status === 'err') {\n        dispatch({ type: SET_ERROR, payload: response.body })\n        return false\n      }\n\n      dispatch({ type: UPDATE_BOOK, payload: data })\n      window.alert('Knjiga je uspesno sacuvana')\n      return true\n\n    } catch (e) {\n      dispatch({ type: SET_ERROR, payload: e.message })\n      return false\n    }\n  }\n\n  const addBook = async data => {\n    try {\n      if (!isAdmin()) {\n        window.alert('Samo admin ima ovu mogucnost')\n        return false\n      }\n\n      const response = await post(`${API_ROOT}/books/new`, data, {\n        'Authorization': getToken(),\n      })\n\n      if (response.status === 'err') {\n        dispatch({ type: SET_ERROR, payload: response.body })\n        return false\n      }\n\n      dispatch({ type: ADD_BOOK, payload: response.body })\n      window.alert('Knjiga je uspesno dodata')\n      return response.body\n\n    } catch (e) {\n      dispatch({ type: SET_ERROR, payload: e.message })\n      return false\n    }\n  }\n\n  const setAdding = is => dispatch({ type: TOGGLE_ADDING, payload: is })\n\n  const setEditing = is => dispatch({ type: TOGGLE_EDITING, payload: is })\n\n  const setCategory = cat => dispatch({ type: SET_CATEGORY, payload: cat })\n\n  const clearError = () => dispatch({ type: SET_ERROR, payload: false })\n\n  const setSearch = term => dispatch({ type: SET_SEARCH, payload: term })\n\n  const setPerPage = count => dispatch({ type: SET_PER_PAGE, payload: count })\n\n  const nextPage = () => dispatch({ type: NEXT_PAGE })\n\n  const prevPage = () => dispatch({ type: PREV_PAGE })\n\n  return {\n    ...state,\n    fetchBooks,\n    fetchAuthorBooks,\n    searchBooks,\n    selectBook,\n    removeBook,\n    updateBook,\n    addBook,\n    setAdding,\n    setEditing,\n    setCategory,\n    clearError,\n    setSearch,\n    setPerPage,\n    nextPage,\n    prevPage\n  }\n}\n"]},"metadata":{},"sourceType":"module"}